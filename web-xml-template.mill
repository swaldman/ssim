package build

val webAppName = "ssim" // change this to whatever name you want!

// change any of these values that you wish to set!
// be sure anything you don't wish to set remains "DEFAULT"!
object InitParam:
  val allowDomains     = "DEFAULT"
  val baseResourcePath = "DEFAULT"
  val baseUrl          = "DEFAULT"
  val browserMaxAge    = "DEFAULT"
  val cacheDir         = "DEFAULT"
  val cacheSize        = "DEFAULT"
  val cullDelay        = "DEFAULT"
  val maxWidth         = "DEFAULT"
  val maxHeight        = "DEFAULT"

lazy val webXmlText =
  s"""|<?xml version="1.0" encoding="ISO-8859-1"?>
      |
      |<!DOCTYPE web-app
      |   PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
      |   "http://java.sun.com/dtd/web-app_2_3.dtd">
      |
      |<web-app>
      |  <display-name>${webAppName}</display-name>
      |
      |  <servlet>
      |    <servlet-name>imageScaleServlet</servlet-name>
      |    <servlet-class>com.mchange.v2.ssim.SsimServlet</servlet-class>
      |
      |    <!-- init params -->
      |    <init-param><param-name>allowDomains</param-name><param-value>${InitParam.allowDomains}</param-value></init-param>
      |    <init-param><param-name>baseResourcePath</param-name><param-value>${InitParam.baseResourcePath}</param-value></init-param>
      |    <init-param><param-name>baseUrl</param-name><param-value>${InitParam.baseUrl}</param-value></init-param>
      |    <init-param><param-name>browserMaxAge</param-name><param-value>${InitParam.browserMaxAge}</param-value></init-param>
      |    <init-param><param-name>cacheDir</param-name><param-value>${InitParam.cacheDir}</param-value></init-param>
      |    <init-param><param-name>cacheSize</param-name><param-value>${InitParam.cacheSize}</param-value></init-param>
      |    <init-param><param-name>cullDelay</param-name><param-value>${InitParam.cullDelay}</param-value></init-param>
      |    <init-param><param-name>maxWidth</param-name><param-value>${InitParam.maxWidth}</param-value></init-param>
      |    <init-param><param-name>maxHeight</param-name><param-value>${InitParam.maxHeight}</param-value></init-param>
      |  </servlet>
      |
      |  <servlet-mapping>
      |    <servlet-name>imageScaleServlet</servlet-name>
      |    <url-pattern>*.jpg</url-pattern>
      |  </servlet-mapping>
      |
      |  <servlet-mapping>
      |    <servlet-name>imageScaleServlet</servlet-name>
      |    <url-pattern>*.JPG</url-pattern>
      |  </servlet-mapping>
      |
      |  <servlet-mapping>
      |    <servlet-name>imageScaleServlet</servlet-name>
      |    <url-pattern>*.jpeg</url-pattern>
      |  </servlet-mapping>
      |
      |  <servlet-mapping>
      |    <servlet-name>imageScaleServlet</servlet-name>
      |    <url-pattern>*.JPEG</url-pattern>
      |  </servlet-mapping>
      |
      |  <servlet-mapping>
      |    <servlet-name>imageScaleServlet</servlet-name>
      |    <url-pattern>*.gif</url-pattern>
      |  </servlet-mapping>
      |
      |  <servlet-mapping>
      |    <servlet-name>imageScaleServlet</servlet-name>
      |    <url-pattern>*.GIF</url-pattern>
      |  </servlet-mapping>
      |
      |  <servlet-mapping>
      |    <servlet-name>imageScaleServlet</servlet-name>
      |    <url-pattern>*.png</url-pattern>
      |  </servlet-mapping>
      |
      |  <servlet-mapping>
      |    <servlet-name>imageScaleServlet</servlet-name>
      |    <url-pattern>*.PNG</url-pattern>
      |  </servlet-mapping>
      |
      |</web-app>""".stripMargin.linesIterator.filterNot( line => line.indexOf("DEFAULT") >= 0 ).mkString( scala.util.Properties.lineSeparator )
